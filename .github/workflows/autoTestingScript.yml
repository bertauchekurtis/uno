name: Automated Testing
on: [push]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
          # default set of ruff rules with GitHub Annotations
          ruff --format=github --target-version=py37 .
      - name: Run unittests
        run: |
          coverage erase
          coverage run -m unittest discover
          coverage html
      - name: Archive code coverage html report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: htmlcov/

  Move-Report:

    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Download Coverage Report
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report
      - name: Test Download
        run: ls -R
      - name: Move Files
        run: |
          mkdir -p coverageReport
          mv *.html ./coverageReport
          mv *.js ./coverageReport
          mv *.png ./coverageReport
          mv *.json ./coverageReport
          mv *.css ./coverageReport
          ls -R
      - name: Push to Repo
        uses: EndBug/add-and-commit@v9
        with:
          message: Auto Generated coverage report
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
          add: coverageReport -f

  Push-to-Docker:

    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/uno:latest

  Deploy-Report:
    needs: Move-Report
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './coverageReport'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
